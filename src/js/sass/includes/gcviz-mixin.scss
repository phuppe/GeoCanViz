@import "compass/css3/images";

$img-root: "images/";
$img-spritebtn: "images/spriteButton.png";
$img-spritepopupbtn: "images/sprite_popups.png";

$font: Verdana, Arial, Helvetica, sans-serif;
$orange: #EFA23E;
$orange-dark: #E54F06;
$orange-light: #FADFBB;
$yellow: #FAFA0A;
$red: #EF300A;
$grey: #666;
$lightgrey: #BFBFBF;
$palegrey: #E8E8E8;
$logogrey: #D1D3D4;
$logogreydark: #636466;
$white: #FFF;
$black: #000;
$lightyellow: #FAFAF5;
$app-strong: #98B8CC;
$app-light: #D2EDFF;
$tb-strong: #FADDB6;
$tb-light: #FFF;
$disabled-light: #98B8CC;
$disabled-strong: #728A99;
$text-color: #000 !default;

$base-classname: "gcviz";

// the rem base factor if the root font-size element is set to something different then 62.5%
//font-size: 62.5%; // 1 rem = 10px
$rembase: 0.625; // 100% come from WET, they set body to 80% if we put html to 62.5% it will screw up their css

// responsive grid (http://viget.com/inspire/building-a-nested-responsive-grid-with-sass-compass)
$cols: 12;
$gutter: 2%;
$one_col: (100% - ($gutter * ($cols - 1))) / $cols;

@mixin cols($num) {
  width: ($one_col * $num) + ($gutter * ($num - 1));
}

@mixin sub_cols($num_child, $num_parent) {
  $parent_size: ($one_col * $num_parent) + ($gutter * ($num_parent - 1));
  $child_size: ($one_col * $num_child) + ($gutter * ($num_child - 1));
  margin-left: ($gutter / $parent_size) * 100%;
  width: ($child_size / $parent_size) * 100%;
}

// set text unselectable (solve problem that select graphic text when drawing)
@mixin unselectable {
   -moz-user-select: -moz-none;
   -khtml-user-select: none;
   -webkit-user-select: none;
   -ms-user-select: none;
   user-select: none;
}

// buttons sprite
@mixin sprite($url, $x, $y, $size: 3.2, $repeat: no-repeat) {
	background: url($url) $x + px $y + px $repeat;
	display: inline;
	cursor: pointer;
	border: none;
	margin-top: (0.5 * $rembase) + rem;
	margin-bottom: (0.5 * $rembase) + rem;
	height: ($size * $rembase) + rem;
	width: ($size * $rembase) + rem;
  position: relative;
	
	&:hover {
		background-position: $x + px $y - 36 + px;
	}
	
	&:focus {
		background-position: $x + px $y - 36 + px;
	}
	
	&:disabled {
		background-position: $x + px $y - 72 + px;
		cursor: none;
	}
}

@mixin spritenohover($url, $x, $y, $size: 3.2, $repeat: no-repeat) {
  @include sprite($url, $x, $y, $size: 3.2, $repeat: no-repeat);
  
  &:hover {
    background-position: $x + px $y + px;
  }
  
  &:focus {
    background-position: $x + px $y + px;
  }
  
  &:disabled {
    background-position: $x + px $y + px;
    cursor: none;
  }
}

@mixin content-border-radius($radius: 0.5, $type: full) {
	@if $type == 'full' { border-radius: ($radius * $rembase) + rem; }
  @if $type == 'left' {
  	border-top-left-radius: ($radius * $rembase) + rem;
  	border-bottom-left-radius: ($radius * $rembase) + rem;
  }
  @if $type == 'right' {
  	border-top-right-radius: ($radius * $rembase) + rem;
  	border-bottom-right-radius: ($radius * $rembase) + rem;
  }
}

@mixin app-head-foot() {
  width: 100%;
  height: (4 * $rembase) + rem;
  text-align: left;
}

@mixin app-text($size: 1.2, $weight: normal, $color: $text-color) {
  font: {
    family: $font!important;
    weight: $weight!important;
    size: ($size * 10) + px!important; // old browsers
    size: ($size * $rembase) + rem!important;
  }
  color: $color;
}

@mixin app-border($width: 1, $style: solid, $color: #000) {
  border: {
    width: ($width * $rembase) + rem;
    style: $style;
    color: $color;
  } 
}
